@use '@angular/material' as mat;
@use 'palette.scss' as palette;

button {
  border: none;
  background-color: transparent;
  font-size: var(--M_font-size);
  transition: 0.1s;
  cursor: pointer;
  color: var(--white);
  text-transform: uppercase;
  text-align: center;
  border-radius: 4px;

  &.modification {
    color: var(--primary);
    padding: 0 20px 10px; 

    &:hover {
      color: var(--primaryDark);
      text-decoration: underline;
    }
  }

  &.deactivation {
    color: mat.get-color-from-palette(palette.$error-palette, 500);
    padding: 0 20px 10px;

    &:hover {
      color: mat.get-color-from-palette(palette.$error-palette, 900);
      text-decoration: underline;
    }
  }

  &.activation {
    color: mat.get-color-from-palette(palette.$success-palette, 500);
    padding: 0 20px 10px;

    &:hover {
      color: mat.get-color-from-palette(palette.$success-palette, 700);
      text-decoration: underline;
    }
  }

  &.success {
    background-color: mat.get-color-from-palette(palette.$success-palette, 500);

    &:hover {
      background-color: mat.get-color-from-palette(palette.$success-palette, 700);
    }
  }

  &.error {
    background-color: mat.get-color-from-palette(palette.$error-palette, 500);

    &:hover {
      background-color: mat.get-color-from-palette(palette.$error-palette, 700);
    }
  }

  &.warning {
    background-color: mat.get-color-from-palette(palette.$warning-palette, 500);

    &:hover {
      background-color: mat.get-color-from-palette(palette.$warning-palette, 700);
    }
  }

  &:disabled {
    background-color: var(--disabledBackground);
    color: var(--disabledColor);

    &:hover{
      background-color: var(--disabledBackground);
    }
  }

  &.largeButton{
    width: 250px;
    height: 45px;
    font-size: var(--L_font-size);
  }

  &.mediumButton{
    width: 160px;
    height: 40px;
  }

  &.smallButton{
    width: 100px;
    height: 35px;
    font-size: var(--S_font-size);
  }

}
